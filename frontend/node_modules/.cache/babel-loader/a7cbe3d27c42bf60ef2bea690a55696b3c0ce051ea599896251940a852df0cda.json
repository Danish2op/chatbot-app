{"ast":null,"code":"import { useQuery as u, useSubscription as i, ApolloClient as l, InMemoryCache as o, ApolloProvider as s } from \"@apollo/client\";\nimport { useAuthenticated as n } from \"@nhost/react\";\nimport m, { useState as A, useEffect as a } from \"react\";\nimport { createApolloClient as f } from \"@nhost/apollo\";\nfunction w(r, e) {\n  const t = n(),\n    c = {\n      ...e,\n      skip: (e == null ? void 0 : e.skip) || !t\n    };\n  return u(r, c);\n}\nfunction y(r, e) {\n  const t = n(),\n    c = {\n      ...e,\n      skip: (e == null ? void 0 : e.skip) || !t\n    };\n  return i(r, c);\n}\nconst h = new l({\n    cache: new o()\n  }),\n  S = ({\n    children: r,\n    ...e\n  }) => {\n    const [t, c] = A();\n    return a(() => {\n      t || c(f(e));\n    }, [t, e]), /* @__PURE__ */m.createElement(s, {\n      client: t || h\n    }, r);\n  };\nexport { S as NhostApolloProvider, w as useAuthQuery, y as useAuthSubscription };","map":{"version":3,"names":["w","r","e","t","n","c","skip","u","y","i","h","l","cache","o","S","NhostApolloProvider","children","A","a","f","m","createElement","s","client"],"sources":["D:\\chatb\\chatbot-app\\frontend\\node_modules\\@nhost\\react-apollo\\src\\hooks.tsx","D:\\chatb\\chatbot-app\\frontend\\node_modules\\@nhost\\react-apollo\\src\\provider.tsx"],"sourcesContent":["import {\n  DocumentNode,\n  OperationVariables,\n  QueryHookOptions,\n  SubscriptionHookOptions,\n  TypedDocumentNode,\n  useQuery,\n  useSubscription\n} from '@apollo/client'\nimport { useAuthenticated } from '@nhost/react'\n\nexport function useAuthQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  const isAuthenticated = useAuthenticated()\n  const newOptions = { ...options, skip: options?.skip || !isAuthenticated }\n  return useQuery(query, newOptions)\n}\n\nexport function useAuthSubscription<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables\n>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>\n) {\n  const isAuthenticated = useAuthenticated()\n  const newOptions: SubscriptionHookOptions<TData, TVariables> = {\n    ...options,\n    skip: options?.skip || !isAuthenticated\n  }\n\n  return useSubscription(subscription, newOptions)\n}\n\n// TODO consider other hooks\n/*\n- useAuthLazyQuery\n- useAuthMutation\n- useRoleQuery\n- useRoleLazyQuery\n- useRoleMutation\n- useRoleSubscription\n*/\n","import React, { PropsWithChildren, useEffect, useState } from 'react'\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { createApolloClient, NhostApolloClientOptions } from '@nhost/apollo'\n\n// This is needed because ApolloProvider can't be rendered without a client. To be able to render\n// the children without our client, we need an ApolloProvider because of potential underlying\n// useQuery hooks in customer applications. This way ApolloProvider and children can be rendered.\nconst mockApolloClient = new ApolloClient({ cache: new InMemoryCache() })\n\nexport const NhostApolloProvider: React.FC<PropsWithChildren<NhostApolloClientOptions>> = ({\n  children,\n  ...options\n}) => {\n  // * See https://github.com/nhost/nhost/pull/214#pullrequestreview-889730478\n  const [client, setClient] = useState<ReturnType<typeof createApolloClient>>()\n\n  // Note: Because we're using XState under the hood, we need to make sure to start the interpreter\n  // on the client side when the component is mounted. This is why we're using `useState` and\n  // `useEffect`.\n  useEffect(() => {\n    if (!client) {\n      setClient(createApolloClient(options))\n    }\n  }, [client, options])\n\n  return <ApolloProvider client={client || mockApolloClient}>{children}</ApolloProvider>\n}\n"],"mappings":";;;;AAWgB,SAAAA,EAIdC,CAAA,EACAC,CAAA,EACA;EACA,MAAMC,CAAA,GAAkBC,CAAA,CAAiB;IACnCC,CAAA,GAAa;MAAE,GAAGH,CAAA;MAASI,IAAA,GAAMJ,CAAA,oBAAAA,CAAA,CAASI,IAAA,KAAQ,CAACH;IAAgB;EAClE,OAAAI,CAAA,CAASN,CAAA,EAAOI,CAAU;AACnC;AAEgB,SAAAG,EAIdP,CAAA,EACAC,CAAA,EACA;EACA,MAAMC,CAAA,GAAkBC,CAAA,CAAiB;IACnCC,CAAA,GAAyD;MAC7D,GAAGH,CAAA;MACHI,IAAA,GAAMJ,CAAA,oBAAAA,CAAA,CAASI,IAAA,KAAQ,CAACH;IAC1B;EAEO,OAAAM,CAAA,CAAgBR,CAAA,EAAcI,CAAU;AACjD;AC7BA,MAAMK,CAAA,GAAmB,IAAIC,CAAA,CAAa;IAAEC,KAAA,EAAO,IAAIC,CAAA;EAAA,CAAiB;EAE3DC,CAAA,GAA6EC,CAAC;IACzFC,QAAA,EAAAf,CAAA;IACA,GAAGC;EACL,MAAM;IAEJ,MAAM,CAACC,CAAA,EAAQE,CAAS,IAAIY,CAAA,CAAgD;IAK5E,OAAAC,CAAA,CAAU,MAAM;MACTf,CAAA,IACOE,CAAA,CAAAc,CAAA,CAAmBjB,CAAO,CAAC;IACvC,GACC,CAACC,CAAA,EAAQD,CAAO,CAAC,GAEZ,eAAAkB,CAAA,CAAAC,aAAA,CAAAC,CAAA;MAAeC,MAAA,EAAQpB,CAAA,IAAUO;IAAA,GAAmBT,CAAS;EACvE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}